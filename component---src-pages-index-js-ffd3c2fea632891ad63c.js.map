{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","React","useState","contributors","setContributors","useEffect","fetch","then","response","json","title","href","style","listStyle","display","flexWrap","justifyContent","allProduct","nodes","map","product","key","slug","to","fixed","localImage","childImageSharp","name","allCategory","edges","node","code","contributor","id","html_url","src","avatar_url","width","alt","login","contributions","query"],"mappings":"8OAmGeA,UA5FG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACUC,IAAMC,SAAS,MAAhDC,EADuB,KACTC,EADS,KAQ9B,OANAH,IAAMI,WAAU,WACdC,MAAM,kEACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,KAAKH,KACP,IAGD,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKM,MAAM,+BACX,0EACA,8EACmD,IACjD,uBAAGC,KAAK,yBAAR,aAFF,iDAGuB,IACrB,uBAAGA,KAAK,2CAAR,mBAJF,SAKI,uBAAGA,KAAK,6BAAR,UALJ,4CASA,iCACE,4CACA,wBACEC,MAAO,CACLC,UAAW,OACXC,QAAS,OACTC,SAAU,OACVC,eAAgB,kBAGjBhB,EAAKiB,WAAWC,MAAMC,KAAI,SAAAC,GAAO,OAChC,wBAAIC,IAAKD,EAAQE,MACf,kBAAC,OAAD,CAAMC,GAAE,YAAcH,EAAQE,MAC5B,kBAAC,IAAD,CAAKE,MAAOJ,EAAQK,WAAWC,gBAAgBF,QAC/C,6BACCJ,EAAQO,YAOnB,iCACE,8CACA,4BACG3B,EAAK4B,YAAYC,MAAMV,KAAI,YAAe,IAAZW,EAAW,EAAXA,KAC7B,OACE,wBAAIT,IAAKS,EAAKC,MACZ,kBAAC,OAAD,CAAMR,GAAE,eAAiBO,EAAKC,MAASD,EAAKH,YAOrDxB,GACC,iCACE,uCACA,2FAAgE,uBAAGQ,KAAK,2CAAR,YAAhE,MACA,wBACEC,MAAO,CACLC,UAAW,OACXC,QAAS,OACTC,SAAU,OACVC,eAAgB,kBAGjBb,EAAagB,KAAI,SAAAa,GAAW,OAC3B,wBAAIX,IAAKW,EAAYC,IACnB,uBAAGtB,KAAMqB,EAAYE,UACnB,yBACEC,IAAKH,EAAYI,WACjBC,MAAM,QACNC,IAAG,aAAeN,EAAYO,QAEhC,6BACCP,EAAYO,OAEf,6BACA,uBAAG5B,KAAI,0DAA4DqB,EAAYO,MAASD,IAAG,oBAAsBN,EAAYO,OAA7H,IACIP,EAAYQ,cADhB,2BAcT,IAAMC,EAAK","file":"component---src-pages-index-js-ffd3c2fea632891ad63c.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({ data }) => {\n  const [contributors, setContributors] = React.useState(null)\n  React.useEffect(() => {\n    fetch(\"https://api.github.com/repos/opengento/gatsbylius/contributors\")\n      .then(response => response.json())\n      .then(setContributors)\n  }, [])\n\n  return (\n    <Layout>\n      <SEO title=\"The fastest shop on earth!\" />\n      <h1>You're browsing the fastest shop on earth!</h1>\n      <p>\n        This is an experimentation created at a friendly{\" \"}\n        <a href=\"https://opengento.fr/\">Opengento</a> meetup in France, over a\n        weekend. It uses the{\" \"}\n        <a href=\"https://github.com/Sylius/ShopApiPlugin\">Sylius Shop API</a> as\n        a <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> source, to create a\n        fast eCommerce PWA.\n      </p>\n\n      <section>\n        <h2>Our products</h2>\n        <ul\n          style={{\n            listStyle: \"none\",\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          {data.allProduct.nodes.map(product => (\n            <li key={product.slug}>\n              <Link to={`/product/${product.slug}`}>\n                <Img fixed={product.localImage.childImageSharp.fixed} />\n                <br />\n                {product.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </section>\n\n      <section>\n        <h2>Our categories</h2>\n        <ul>\n          {data.allCategory.edges.map(({ node }) => {\n            return (\n              <li key={node.code}>\n                <Link to={`/categories/${node.code}`}>{node.name}</Link>\n              </li>\n            )\n          })}\n        </ul>\n      </section>\n\n      {contributors && (\n        <section>\n          <h2>Thanks!</h2>\n          <p>Thanks to all these contributors who worked on this project (<a href=\"https://github.com/opengento/gatsbylius\">join us!</a>):</p>\n          <ul\n            style={{\n              listStyle: \"none\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            {contributors.map(contributor => (\n              <li key={contributor.id}>\n                <a href={contributor.html_url}>\n                  <img\n                    src={contributor.avatar_url}\n                    width=\"100px\"\n                    alt={`Avatar of ${contributor.login}`}\n                  />\n                  <br />\n                  {contributor.login}\n                </a>\n                <br />\n                <a href={`https://github.com/opengento/gatsbylius/commits?author=${contributor.login}`} alt={`Contributions of ${contributor.login}`}>\n                  ({contributor.contributions} contributions)\n                  </a>\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query HomePageQuery {\n    allCategory {\n      edges {\n        node {\n          id\n          code\n          slug\n          name\n        }\n      }\n    }\n    allProduct {\n      nodes {\n        slug\n        name\n        localImage {\n          childImageSharp {\n            # Specify the image processing specifications right in the query.\n            # Makes it trivial to update as your page's design changes.\n            fixed(width: 125, height: 125) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}